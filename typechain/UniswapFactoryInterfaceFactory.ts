/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, Signer} from "ethers";
import {Provider} from "ethers/providers";

import {UniswapFactoryInterface} from "./UniswapFactoryInterface";

export class UniswapFactoryInterfaceFactory {
  static connect(address: string, signerOrProvider: Signer | Provider): UniswapFactoryInterface {
    return new Contract(address, _abi, signerOrProvider) as UniswapFactoryInterface;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "createExchange",
    outputs: [
      {
        internalType: "address",
        name: "exchange",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getExchange",
    outputs: [
      {
        internalType: "address",
        name: "exchange",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "exchange",
        type: "address",
      },
    ],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenWithId",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "template",
        type: "address",
      },
    ],
    name: "initializeFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
