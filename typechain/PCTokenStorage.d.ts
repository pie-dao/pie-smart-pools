/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, ContractTransaction, EventFilter, Signer} from "ethers";
import {Listener, Provider} from "ethers/providers";
import {Arrayish, BigNumber, BigNumberish, Interface} from "ethers/utils";
import {TransactionOverrides, TypedEventDescription, TypedFunctionDescription} from ".";

interface PCTokenStorageInterface extends Interface {
  functions: {
    ptSlot: TypedFunctionDescription<{encode([]: []): string}>;
  };

  events: {};
}

export class PCTokenStorage extends Contract {
  connect(signerOrProvider: Signer | Provider | string): PCTokenStorage;
  attach(addressOrName: string): PCTokenStorage;
  deployed(): Promise<PCTokenStorage>;

  on(event: EventFilter | string, listener: Listener): PCTokenStorage;
  once(event: EventFilter | string, listener: Listener): PCTokenStorage;
  addListener(eventName: EventFilter | string, listener: Listener): PCTokenStorage;
  removeAllListeners(eventName: EventFilter | string): PCTokenStorage;
  removeListener(eventName: any, listener: Listener): PCTokenStorage;

  interface: PCTokenStorageInterface;

  functions: {
    ptSlot(): Promise<string>;
  };

  ptSlot(): Promise<string>;

  filters: {};

  estimate: {
    ptSlot(): Promise<BigNumber>;
  };
}
